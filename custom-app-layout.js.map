{"version":3,"file":"custom-app-layout.js","sources":["../backed/src/utils.js","../backed/node_modules/lit-html/lit-html.js","../backed/src/mixins/lit-mixin.js","../backed/src/mixins/property-mixin.js","../custom-effects/src/custom-effects.js","../backed/src/internals/render-status.js","src/custom-app-layout.js"],"sourcesContent":["//\n// toJsProp\n//\n\n/**\n * @mixin Backed\n * @module utils\n * @export toJsProp\n *\n * some-prop -> someProp\n *\n * @param {string} string The content to convert\n * @return {string} string\n */\nexport const toJsProp = string => {\n  let parts = string.split('-');\n  if (parts.length > 1) {\n    var upper = parts[1].charAt(0).toUpperCase();\n    string = parts[0] + upper + parts[1].slice(1).toLowerCase();\n  }\n  return string;\n}\n/**\n* Replaces all accented chars with regular ones\n*/\nconst replaceAccents = string => {\n  // verifies if the String has accents and replace them\n  if (string.search(/[\\xC0-\\xFF]/g) > -1) {\n      string = string\n              .replace(/[\\xC0-\\xC5]/g, \"A\")\n              .replace(/[\\xC6]/g, \"AE\")\n              .replace(/[\\xC7]/g, \"C\")\n              .replace(/[\\xC8-\\xCB]/g, \"E\")\n              .replace(/[\\xCC-\\xCF]/g, \"I\")\n              .replace(/[\\xD0]/g, \"D\")\n              .replace(/[\\xD1]/g, \"N\")\n              .replace(/[\\xD2-\\xD6\\xD8]/g, \"O\")\n              .replace(/[\\xD9-\\xDC]/g, \"U\")\n              .replace(/[\\xDD]/g, \"Y\")\n              .replace(/[\\xDE]/g, \"P\")\n              .replace(/[\\xE0-\\xE5]/g, \"a\")\n              .replace(/[\\xE6]/g, \"ae\")\n              .replace(/[\\xE7]/g, \"c\")\n              .replace(/[\\xE8-\\xEB]/g, \"e\")\n              .replace(/[\\xEC-\\xEF]/g, \"i\")\n              .replace(/[\\xF1]/g, \"n\")\n              .replace(/[\\xF2-\\xF6\\xF8]/g, \"o\")\n              .replace(/[\\xF9-\\xFC]/g, \"u\")\n              .replace(/[\\xFE]/g, \"p\")\n              .replace(/[\\xFD\\xFF]/g, \"y\");\n  }\n\n  return string;\n}\n\nconst removeNonWord = string => string.replace(/[^0-9a-zA-Z\\xC0-\\xFF \\-]/g, '');\n\nconst WHITE_SPACES = [\n    ' ', '\\n', '\\r', '\\t', '\\f', '\\v', '\\u00A0', '\\u1680', '\\u180E',\n    '\\u2000', '\\u2001', '\\u2002', '\\u2003', '\\u2004', '\\u2005', '\\u2006',\n    '\\u2007', '\\u2008', '\\u2009', '\\u200A', '\\u2028', '\\u2029', '\\u202F',\n    '\\u205F', '\\u3000'\n];\n\n/**\n* Remove chars from beginning of string.\n*/\nconst ltrim = (string, chars) => {\n  chars = chars || WHITE_SPACES;\n\n  var start = 0,\n      len = string.length,\n      charLen = chars.length,\n      found = true,\n      i, c;\n\n  while (found && start < len) {\n      found = false;\n      i = -1;\n      c = string.charAt(start);\n\n      while (++i < charLen) {\n          if (c === chars[i]) {\n              found = true;\n              start++;\n              break;\n          }\n      }\n  }\n\n  return (start >= len) ? '' : string.substr(start, len);\n}\n\n/**\n* Remove chars from end of string.\n*/\nconst rtrim = (string, chars) => {\n  chars = chars || WHITE_SPACES;\n\n  var end = string.length - 1,\n      charLen = chars.length,\n      found = true,\n      i, c;\n\n  while (found && end >= 0) {\n      found = false;\n      i = -1;\n      c = string.charAt(end);\n\n      while (++i < charLen) {\n          if (c === chars[i]) {\n              found = true;\n              end--;\n              break;\n          }\n      }\n  }\n\n  return (end >= 0) ? string.substring(0, end + 1) : '';\n}\n\n/**\n * Add space between camelCase text.\n */\nconst unCamelCase = string => {\n  string = string.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g, '$1 $2');\n  string = string.toLowerCase();\n  return string;\n}\n\n/**\n * Remove white-spaces from beginning and end of string.\n */\nexport const trim = (string, chars) => {\n  chars = chars || WHITE_SPACES;\n  return ltrim(rtrim(string, chars), chars);\n}\n\n/**\n * Convert to lower case, remove accents, remove non-word chars and\n * replace spaces with the specified delimeter.\n * Does not split camelCase text.\n */\nexport const slugify = (string, delimeter) => {\n  if (delimeter == null) {\n      delimeter = \"-\";\n  }\n\n  string = replaceAccents(string);\n  string = removeNonWord(string);\n  string = trim(string) //should come after removeNonWord\n          .replace(/ +/g, delimeter) //replace spaces with delimeter\n          .toLowerCase();\n  return string;\n}\n\n/**\n* Replaces spaces with hyphens, split camelCase text, remove non-word chars, remove accents and convert to lower case.\n*/\nexport const hyphenate = string => {\n  string = unCamelCase(string);\n  return slugify(string, \"-\");\n}\n\n//\n// merge\n//\n\n/**\n * @mixin Backed\n * @module utils\n * @export merge\n *\n * some-prop -> someProp\n *\n * @param {object} object The object to merge with\n * @param {object} source The object to merge\n * @return {object} merge result\n */\nexport const merge = (object = {}, source = {}) => {\n  // deep assign\n  for (const key of Object.keys(object)) {\n    if (source[key]) {\n      Object.assign(object[key], source[key]);\n    }\n  }\n  // assign the rest\n  for (const key of Object.keys(source)) {\n    if (!object[key]) {\n      object[key] = source[key];\n    }\n  }\n  return object;\n}\n\n//\n// loadScript\n//\n\n/**\n * @mixin Backed\n * @module utils\n * @export loadScript\n *\n * defer handles loading after the document is parsed, async loads while parsing\n *\n * @param {string} src link/path to the script to load\n * @param {string} method default: 'async',  options: `defer, async, ''`\n * @return {object} merge result\n */\n export const loadScript = (src, method) => {\n   return new Promise((resolve, reject) => {\n     let script = document.createElement('script');\n     script.setAttribute(method, '');\n     script.onload = result => {\n       resolve(result);\n     }\n     script.onerror = error => {\n       reject(error);\n     }\n     script.src = src;\n     document.body.appendChild(script);\n   });\n }\n\n //\n // fireEvent\n //\n\n /**\n  * @mixin backed\n  * @module utils\n  * @export fireEvent\n  *\n  * @param {string} type Name of the event\n  * @param {HTMLElement} target context\n  * @param {string|boolean|number|object|array} detail\n  */\n export const fireEvent = (type='', detail=null, target=this) => {\n   target.dispatchEvent(new CustomEvent(type, {detail: detail}));\n };\n\n\n let sheduled = false;\n const afterRenderQue = [];\n const beforeRenderQue = [];\n\n const callMethod = array => {\n   const context = array[0];\n   const callback = array[1];\n   const args = array[2];\n   try {\n     callback.apply(context, args);\n   } catch(e) {\n     setTimeout(() => {\n       throw e;\n     })\n   }\n };\n\n const flushQue = que => {\n   while (que.length) {\n     callMethod(que.shift);\n   }\n };\n\n const runQue = que => {\n   for (let i=0, l=que.length; i < l; i++) {\n     callMethod(que.shift());\n   }\n   sheduled = false;\n }\n\n const shedule = () => {\n   sheduled = true;\n   requestAnimationFrame(() => {\n     flushQue(beforeRenderQue);\n     setTimeout(() => {\n       runQue(afterRenderQue);\n     });\n   });\n };\n\n export const RenderStatus = (() => {\n   window.RenderStatus = window.RenderStatus || {\n     afterRender: (context, callback, args) => {\n       if (!sheduled) {\n         shedule();\n       }\n       afterRenderQue.push([context, callback, args]);\n     },\n     beforeRender: (context, callback, args) => {\n       if (!sheduled) {\n         shedule();\n       }\n       beforeRenderQue.push([context, callback, args]);\n     }\n   }\n })();\n\n export const shouldRegister = name => {\n   return customElements.get(name) ? false : true;\n }\n\n export const define = klass => {\n   const name = hyphenate(klass.name);\n   return shouldRegister(name) ? customElements.define(name, klass) : '';\n }\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// The first argument to JS template tags retain identity across multiple\n// calls to a tag for the same literal, so we can cache work done per literal\n// in a Map.\nconst templates = new Map();\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport function html(strings, ...values) {\n    let template = templates.get(strings);\n    if (template === undefined) {\n        template = new Template(strings);\n        templates.set(strings, template);\n    }\n    return new TemplateResult(template, values);\n}\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(template, values) {\n        this.template = template;\n        this.values = values;\n    }\n}\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n */\nexport function render(result, container) {\n    let instance = container.__templateInstance;\n    if (instance !== undefined &&\n        instance.template === result.template &&\n        instance instanceof TemplateInstance) {\n        instance.update(result.values);\n        return;\n    }\n    instance = new TemplateInstance(result.template);\n    container.__templateInstance = instance;\n    const fragment = instance._clone();\n    instance.update(result.values);\n    while (container.firstChild) {\n        container.removeChild(container.firstChild);\n    }\n    container.appendChild(fragment);\n}\nconst exprMarker = '{{}}';\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport class TemplatePart {\n    constructor(type, index, name, rawName, strings) {\n        this.type = type;\n        this.index = index;\n        this.name = name;\n        this.rawName = rawName;\n        this.strings = strings;\n    }\n}\nexport class Template {\n    constructor(strings) {\n        this.parts = [];\n        this._strings = strings;\n        this._parse();\n    }\n    _parse() {\n        this.element = document.createElement('template');\n        this.element.innerHTML = this._getTemplateHtml(this._strings);\n        const walker = document.createTreeWalker(this.element.content, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT);\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        const attributesToRemove = [];\n        while (walker.nextNode()) {\n            index++;\n            const node = walker.currentNode;\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                const attributes = node.attributes;\n                for (let i = 0; i < attributes.length; i++) {\n                    const attribute = attributes.item(i);\n                    const value = attribute.value;\n                    const strings = value.split(exprMarker);\n                    if (strings.length > 1) {\n                        const attributeString = this._strings[partIndex];\n                        // Trim the trailing literal value if this is an interpolation\n                        const rawNameString = attributeString.substring(0, attributeString.length - strings[0].length);\n                        const match = rawNameString.match(/((?:\\w|[.\\-_$])+)=[\"']?$/);\n                        const rawName = match[1];\n                        this.parts.push(new TemplatePart('attribute', index, attribute.name, rawName, strings));\n                        attributesToRemove.push(attribute);\n                        partIndex += strings.length - 1;\n                    }\n                }\n            }\n            else if (node.nodeType === Node.TEXT_NODE) {\n                const strings = node.nodeValue.split(exprMarker);\n                if (strings.length > 1) {\n                    // Generate a new text node for each literal and two for each part,\n                    // a start and end\n                    partIndex += strings.length - 1;\n                    for (let i = 0; i < strings.length; i++) {\n                        const string = strings[i];\n                        const literalNode = new Text(string);\n                        node.parentNode.insertBefore(literalNode, node);\n                        index++;\n                        if (i < strings.length - 1) {\n                            node.parentNode.insertBefore(new Text(), node);\n                            node.parentNode.insertBefore(new Text(), node);\n                            this.parts.push(new TemplatePart('node', index));\n                            index += 2;\n                        }\n                    }\n                    index--;\n                    nodesToRemove.push(node);\n                }\n                else if (!node.nodeValue.trim()) {\n                    nodesToRemove.push(node);\n                    index--;\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n        for (const a of attributesToRemove) {\n            a.ownerElement.removeAttribute(a.name);\n        }\n    }\n    _getTemplateHtml(strings) {\n        const parts = [];\n        for (let i = 0; i < strings.length; i++) {\n            parts.push(strings[i]);\n            if (i < strings.length - 1) {\n                parts.push(exprMarker);\n            }\n        }\n        return parts.join('');\n    }\n}\nexport class Part {\n    constructor(instance) {\n        this.instance = instance;\n    }\n    _getValue(value) {\n        if (typeof value === 'function') {\n            try {\n                value = value(this);\n            }\n            catch (e) {\n                console.error(e);\n                return;\n            }\n        }\n        if (value === null) {\n            // `null` as the value of Text node will render the string 'null'\n            return undefined;\n        }\n        return value;\n    }\n}\nexport class AttributePart extends Part {\n    constructor(instance, element, name, strings) {\n        super(instance);\n        console.assert(element.nodeType === Node.ELEMENT_NODE);\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(values) {\n        const strings = this.strings;\n        let text = '';\n        for (let i = 0; i < strings.length; i++) {\n            text += strings[i];\n            if (i < strings.length - 1) {\n                const v = this._getValue(values[i]);\n                if (v && typeof v !== 'string' && v[Symbol.iterator]) {\n                    for (const t of v) {\n                        // TODO: we need to recursively call getValue into iterables...\n                        text += t;\n                    }\n                }\n                else {\n                    text += v;\n                }\n            }\n        }\n        this.element.setAttribute(this.name, text);\n    }\n    get size() {\n        return this.strings.length - 1;\n    }\n}\nexport class NodePart extends Part {\n    constructor(instance, startNode, endNode) {\n        super(instance);\n        this.startNode = startNode;\n        this.endNode = endNode;\n    }\n    setValue(value) {\n        value = this._getValue(value);\n        if (value instanceof Node) {\n            this._previousValue = this._setNodeValue(value);\n        }\n        else if (value instanceof TemplateResult) {\n            this._previousValue = this._setTemplateResultValue(value);\n        }\n        else if (value && value.then !== undefined) {\n            value.then((v) => {\n                if (this._previousValue === value) {\n                    this.setValue(v);\n                }\n            });\n            this._previousValue = value;\n        }\n        else if (value && typeof value !== 'string' && value[Symbol.iterator]) {\n            this._previousValue = this._setIterableValue(value);\n        }\n        else if (this.startNode.nextSibling === this.endNode.previousSibling &&\n            this.startNode.nextSibling.nodeType === Node.TEXT_NODE) {\n            this.startNode.nextSibling.textContent = value;\n            this._previousValue = value;\n        }\n        else {\n            this._previousValue = this._setTextValue(value);\n        }\n    }\n    _insertNodeBeforeEndNode(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _setNodeValue(value) {\n        this.clear();\n        this._insertNodeBeforeEndNode(value);\n        return value;\n    }\n    _setTextValue(value) {\n        return this._setNodeValue(new Text(value));\n    }\n    _setTemplateResultValue(value) {\n        let instance;\n        if (this._previousValue && this._previousValue._template === value.template) {\n            instance = this._previousValue;\n        }\n        else {\n            instance = this.instance._createInstance(value.template);\n            this._setNodeValue(instance._clone());\n        }\n        instance.update(value.values);\n        return instance;\n    }\n    _setIterableValue(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and update Arrays of\n        // TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`)\n        // We reuse this parts startNode as the first part's startNode, and this\n        // parts endNode as the last part's endNode.\n        let itemStart = this.startNode;\n        let itemEnd;\n        const values = value[Symbol.iterator]();\n        const previousParts = Array.isArray(this._previousValue) ?\n            this._previousValue : undefined;\n        let previousPartsIndex = 0;\n        const itemParts = [];\n        let current = values.next();\n        let next = values.next();\n        if (current.done) {\n            // Empty iterable, just clear\n            this.clear();\n        }\n        while (!current.done) {\n            // Reuse a previous part if we can, otherwise create a new one\n            let itemPart;\n            if (previousParts !== undefined && previousPartsIndex < previousParts.length) {\n                itemPart = previousParts[previousPartsIndex++];\n                if (next.done && itemPart.endNode !== this.endNode) {\n                    // Since this is the last part we'll use, set it's endNode to the\n                    // container's endNode. Setting the value of this part will clean\n                    // up any residual nodes from a previously longer iterable.\n                    // Remove previousSibling, since we want itemPart.endNode to be\n                    // removed as part of the clear operation.\n                    this.clear(itemPart.endNode.previousSibling);\n                    itemPart.endNode = this.endNode;\n                }\n                itemEnd = itemPart.endNode;\n            }\n            else {\n                if (next.done) {\n                    // on the last item, reuse this part's endNode\n                    itemEnd = this.endNode;\n                }\n                else {\n                    itemEnd = new Text();\n                    this._insertNodeBeforeEndNode(itemEnd);\n                }\n                itemPart = new NodePart(this.instance, itemStart, itemEnd);\n            }\n            itemPart.setValue(current.value);\n            itemParts.push(itemPart);\n            current = next;\n            next = values.next();\n            itemStart = itemEnd;\n        }\n        return itemParts;\n    }\n    clear(startNode = this.startNode) {\n        this._previousValue = undefined;\n        let node = startNode.nextSibling;\n        while (node !== null && node !== this.endNode) {\n            let next = node.nextSibling;\n            node.parentNode.removeChild(node);\n            node = next;\n        }\n    }\n}\nexport class TemplateInstance {\n    constructor(template) {\n        this._parts = [];\n        this._template = template;\n    }\n    get template() {\n        return this._template;\n    }\n    update(values) {\n        let valueIndex = 0;\n        for (const part of this._parts) {\n            if (part.size === undefined) {\n                part.setValue(values[valueIndex++]);\n            }\n            else {\n                part.setValue(values.slice(valueIndex, valueIndex + part.size));\n                valueIndex += part.size;\n            }\n        }\n    }\n    _clone() {\n        const fragment = document.importNode(this._template.element.content, true);\n        if (this._template.parts.length > 0) {\n            const walker = document.createTreeWalker(fragment, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT);\n            const parts = this._template.parts;\n            let index = 0;\n            let partIndex = 0;\n            let templatePart = parts[0];\n            let node = walker.nextNode();\n            while (node != null && partIndex < parts.length) {\n                if (index === templatePart.index) {\n                    this._parts.push(this._createPart(templatePart, node));\n                    templatePart = parts[++partIndex];\n                }\n                else {\n                    index++;\n                    node = walker.nextNode();\n                }\n            }\n        }\n        return fragment;\n    }\n    _createPart(templatePart, node) {\n        if (templatePart.type === 'attribute') {\n            return new AttributePart(this, node, templatePart.name, templatePart.strings);\n        }\n        else if (templatePart.type === 'node') {\n            return new NodePart(this, node, node.nextSibling);\n        }\n        else {\n            throw new Error(`unknown part type: ${templatePart.type}`);\n        }\n    }\n    _createInstance(template) {\n        return new TemplateInstance(template);\n    }\n}\n//# sourceMappingURL=lit-html.js.map","import { html, render } from './../../node_modules/lit-html/lit-html.js';\nwindow.html = window.html || html;\r\nwindow.Backed = window.Backed || {};\nwindow.Backed.Renderer = window.Backed.Renderer || render;\r\n\r\n/**\r\n * @module LitMixin\r\n * @mixin Backed\r\n * @param {class} base class to extend from\r\n */\r\nexport default base => {\r\n  return class LitMixin extends base {\r\n    constructor(options = {}) {\r\n      super(options);\n      if (!this.shadowRoot) this.attachShadow({mode: 'open'});\r\n      this._isValidRenderer(this.render);\r\n    }\n    connectedCallback() {\n      if (super.connectedCallback) super.connectedCallback();\n      if (this.render) render(this.render(), this.shadowRoot);\n    }\r\n    _isValidRenderer(renderer) {\r\n      if (!renderer) {\n       throw 'Missing render method!';\r\n       return;\r\n      }\r\n      if (!String(renderer).includes('return html`') &&\n         !String(renderer).includes('template')) {\n         throw 'Invalid renderer!';\n      }\r\n    }\r\n  }\r\n}\r\n","window.Backed = window.Backed || {};\r\n// binding does it's magic using the propertyStore ...\r\nwindow.Backed.PropertyStore = window.Backed.PropertyStore || new Map();\r\n\r\nconst render = window.Backed.Renderer;\r\n// TODO: Create & add global observer\r\nexport default base => {\r\n  return class PropertyMixin extends base {\n    static get observedAttributes() {\n      return Object.entries(this.properties).map(entry => {if (entry[1].reflect) {return entry[0]} else return null});\n    }\n\n    get properties() {\n      return customElements.get(this.localName).properties;\n    }\n\r\n    constructor() {\r\n      super();\n      if (this.properties) {\n        for (const entry of Object.entries(this.properties)) {\n          const { observer, reflect, renderer } = entry[1];\n          if (observer || reflect || renderer) {\n            if (renderer && !render) {\n              console.warn('Renderer undefined');\n            }\n          }\n          // allways define property even when renderer is not found.\n          this.defineProperty(entry[0], entry[1]);\n        }\n      }\r\n    }\n\n    connectedCallback() {\n      if (super.connectedCallback) super.connectedCallback();\n      if (this.attributes)\n        for (const attribute of this.attributes) {\n          if (String(attribute.name).includes('on-')) {\n            const fn = attribute.value;\n            const name = attribute.name.replace('on-', '');\n            target.addEventListener(String(name), event => {\n              target = event.path[0];\n              while (!target.host) {\n                target = target.parentNode;\n              }\n              if (target.host[fn]) {\n                target.host[fn](event);\n              }\n            });\n          }\n      }\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      this[name] = newValue;\n    }\r\n\r\n    /**\r\n     * @param {function} options.observer callback function returns {instance, property, value}\r\n     * @param {boolean} options.reflect when true, reflects value to attribute\r\n     * @param {function} options.render callback function for renderer (example: usage with lit-html, {render: render(html, shadowRoot)})\r\n     */\r\n    defineProperty(property = null, {strict = false, observer, reflect = false, renderer, value}) {\r\n      Object.defineProperty(this, property, {\r\n        set(value) {\r\n          if (value === this[`___${property}`]) return;\r\n          this[`___${property}`] = value;\r\n\r\n          if (reflect) {\r\n            if (value) this.setAttribute(property, String(value));\r\n            else this.removeAttribute(property);\r\n          }\r\n\r\n          if (observer) {\r\n            if (observer in this) this[observer]();\r\n            else console.warn(`observer::${observer} undefined`);\r\n          }\r\n\r\n          if (renderer) {\r\n            if (renderer in this) render(this[renderer](), this.shadowRoot);\r\n            else console.warn(`renderer::${renderer} undefined`);\r\n          }\r\n\r\n        },\r\n        get() {\r\n          return this[`___${property}`];\r\n        },\r\n        configurable: strict ? false : true\r\n      });\r\n      // check if attribute is defined and update property with it's value\r\n      // else fallback to it's default value (if any)\r\n      const attr = this.getAttribute(property);\r\n      this[property] = attr || this.hasAttribute(property) || value;\r\n    }\r\n  }\r\n}\r\n","export default base => class CustomEffects extends base {\r\n  get effects() {\r\n    return customElements.get(this.localName).effects;\r\n  }\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    if (super.connectedCallback) super.connectedCallback();\r\n    if (this.effects) {\r\n      for (const effect of this.effects) {\r\n        this._initEffect(effect);\r\n      }\r\n    }\r\n  }\r\n\r\n  _initEffect(effect) {\r\n    if (typeof effect === 'string') {\r\n      effect = [effect, effect === 'resize' || effect === 'scroll' ? window : this];\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n      effect[1].addEventListener(effect[0], event => {\r\n        const func = effect[0].slice(0, 1).toUpperCase() + effect[0].slice(1);\r\n        if (this[`on${func}`]) {\r\n          this[`on${func}`](event);\r\n        } else {\r\n          console.warn(`on${func} method missing`);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","'use strict';\r\nlet sheduled = false;\r\nconst afterRenderQue = [];\r\nconst beforeRenderQue = [];\r\n\r\nconst callMethod = array => {\r\n  const context = array[0];\r\n  const callback = array[1];\r\n  const args = array[2];\r\n  try {\r\n    callback.apply(context, args);\r\n  } catch(e) {\r\n    setTimeout(() => {\r\n      throw e;\r\n    })\r\n  }\r\n};\r\n\r\nconst flushQue = que => {\r\n  while (que.length) {\r\n    callMethod(que.shift);\r\n  }\r\n};\r\n\r\nconst runQue = que => {\r\n  for (let i=0, l=que.length; i < l; i++) {\r\n    callMethod(que.shift());\r\n  }\r\n  sheduled = false;\r\n}\r\n\r\nconst shedule = () => {\r\n  sheduled = true;\r\n  requestAnimationFrame(() => {\r\n    flushQue(beforeRenderQue);\r\n    setTimeout(() => {\r\n      runQue(afterRenderQue);\r\n    });\r\n  });\r\n};\r\n\r\nexport default {\r\n  afterRender: (context, callback, args) => {\r\n    if (!sheduled) {\r\n      shedule();\r\n    }\r\n    afterRenderQue.push([context, callback, args]);\r\n  },\r\n  beforeRender: (context, callback, args) => {\r\n    if (!sheduled) {\r\n      shedule();\r\n    }\r\n    beforeRenderQue.push([context, callback, args]);\r\n  }\r\n\r\n}\r\n","import { define, merge } from './../../backed/src/utils';\r\nimport LitMixin from './../../backed/src/mixins/lit-mixin.js';\r\nimport PropertyMixin from './../../backed/src/mixins/property-mixin.js';\r\nimport CustomEffects from './../../custom-effects/src/custom-effects.js';\r\nimport RenderStatus from './../../backed/src/internals/render-status.js';\r\n\r\n/**\r\n * @example\r\n * <custom-app-layout>\r\n *   <header slot=\"header\" fixed></header>\r\n *   <section slot=\"content\"></section> // appears under the header\r\n * </custom-app-layout>\r\n * @extends LitMixin, PropertyMixin, HTMLElement\r\n */\r\nexport default define(class CustomAppLayout extends PropertyMixin(LitMixin(CustomEffects(HTMLElement))) {\r\n  /**\r\n   * @return {object}\r\n   */\r\n  static get properties() {\r\n    return merge(super.properties, {\r\n      firstRender: {value: true, observer: 'onResize'},\r\n      headerMarginTop: {value: '', renderer: 'render'},\r\n      headerPaddingTop: {value: '', renderer: 'render'}\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @return {array} [effects]\r\n   */\r\n  static get effects() {\r\n    return ['resize'];\r\n  }\r\n\r\n  /**\r\n   * calls super\r\n   */\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // iterate trough slots untill no slot is found\r\n  slotted(slot) {\r\n    slot = slot.assignedNodes();\r\n    if (slot[0] && slot[0].localName === 'slot') {\r\n      return this.slotted(slot[0]);\r\n    } else {\r\n      for (const node of slot) {\r\n        if (node.nodeType === 1) {\r\n          this.__nodeList.push(node)\r\n        }\r\n      }\r\n      if (this.__nodeList.length !== 0) return this.__nodeList;\r\n    }\r\n    return [slot];\r\n  }\r\n\r\n  get headers() {\r\n    this.__nodeList = [];\r\n    return this.slotted(this.shadowRoot.querySelector('slot[name=\"header\"]'));\r\n  }\r\n\r\n  get container() {\r\n    return this.shadowRoot.querySelector('.content-container');\r\n  }\r\n\r\n  onResize() {\r\n    if (!this.firstRender) {\r\n      RenderStatus.afterRender(this, () => {\r\n        const headers = this.headers;\r\n        console.log(this.headers);\r\n        let offsetHeight = 0;\r\n        if (headers.length !== 0) {\r\n          for (const header of headers) {\r\n            offsetHeight += header.offsetHeight;\r\n          }\r\n        } else {\r\n          offsetHeight = headers[0].offsetHeight;\r\n        }\r\n        if (headers[0].hasAttribute('fixed') && !headers[0].hasAttribute('condenses')) {\r\n          // If the header size does not change and we're using a scrolling region, exclude\r\n          // the header area from the scrolling region so that the header doesn't overlap\r\n          // the scrollbar.\r\n          requestAnimationFrame(() => {\r\n            this.headerMarginTop = offsetHeight + 'px';\r\n            this.headerPaddingTop = '';\r\n          });\r\n        } else {\r\n          requestAnimationFrame(() => {\r\n            this.headerPaddingTop = offsetHeight + 'px';\r\n            this.headerMarginTop = '';\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.firstRender) { // do nothing on firstRender\r\n      this.firstRender = false;\r\n    }\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: block;\r\n          position: relative;\r\n          height: 100%;\r\n          z-index: 0;\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        :host([fullbleed]) {\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n        }\r\n        :host:not([fixed]) ::slotted([slot=\"header\"]) {\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          z-index: 1;\r\n        }\r\n        .content-container {\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          flex: 1;\r\n          flex-direction: column;\r\n          z-index: 0;\r\n          overflow-y: auto;\r\n          -webkit-overflow-scrolling: touch;\r\n        }\r\n      </style>\r\n      <slot name=\"header\"></slot>\r\n      <span class=\"content-container\" style=\"margin-top: ${this.headerMarginTop}; padding-top: ${this.headerPaddingTop};\">\r\n        <slot name=\"content\"></slot>\r\n      </span>\r\n    `;\r\n  }\r\n});\r\n"],"names":["replaceAccents","string","search","replace","removeNonWord","WHITE_SPACES","ltrim","chars","start","len","length","charLen","found","i","c","charAt","substr","rtrim","end","substring","unCamelCase","toLowerCase","trim","slugify","delimeter","hyphenate","merge","object","source","key","Object","keys","assign","sheduled","afterRenderQue","beforeRenderQue","callMethod","array","context","callback","args","apply","e","flushQue","que","shift","runQue","l","shedule","RenderStatus","window","push","shouldRegister","name","customElements","get","define","klass","templates","Map","html","strings","values","template","undefined","Template","set","TemplateResult","render","result","container","instance","__templateInstance","TemplateInstance","update","fragment","_clone","firstChild","removeChild","appendChild","exprMarker","TemplatePart","type","index","rawName","parts","_strings","_parse","element","document","createElement","innerHTML","_getTemplateHtml","walker","createTreeWalker","content","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","partIndex","nodesToRemove","attributesToRemove","nextNode","node","currentNode","nodeType","Node","ELEMENT_NODE","attributes","attribute","item","value","split","attributeString","rawNameString","match","TEXT_NODE","nodeValue","literalNode","Text","parentNode","insertBefore","n","a","ownerElement","removeAttribute","join","Part","error","AttributePart","assert","text","v","_getValue","Symbol","iterator","t","setAttribute","size","NodePart","startNode","endNode","_previousValue","_setNodeValue","_setTemplateResultValue","then","setValue","_setIterableValue","nextSibling","previousSibling","textContent","_setTextValue","clear","_insertNodeBeforeEndNode","_template","_createInstance","itemStart","itemEnd","previousParts","Array","isArray","previousPartsIndex","itemParts","current","next","done","itemPart","_parts","valueIndex","part","slice","importNode","templatePart","_createPart","Error","Backed","Renderer","base","LitMixin","options","shadowRoot","attachShadow","mode","_isValidRenderer","connectedCallback","renderer","String","includes","PropertyStore","PropertyMixin","observedAttributes","entries","properties","map","entry","reflect","localName","observer","warn","defineProperty","fn","addEventListener","event","path","target","host","oldValue","newValue","property","strict","console","attr","getAttribute","hasAttribute","CustomEffects","effects","effect","_initEffect","Promise","resolve","reject","func","toUpperCase","CustomAppLayout","HTMLElement","slot","assignedNodes","slotted","__nodeList","headers","querySelector","firstRender","afterRender","log","offsetHeight","header","headerMarginTop","headerPaddingTop"],"mappings":"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"}